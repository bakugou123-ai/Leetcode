from collections import deque
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def invertTree(self, root: Optional[TreeNode]) -> Optional[TreeNode]:
        q=deque()
        q.append(root)
        if not root:
            return None
        while q:
            n=q.popleft()
            n.left,n.right=n.right,n.left
            if n.left: q.append(n.left)
            if n.right : q.append(n.right)
        return root
